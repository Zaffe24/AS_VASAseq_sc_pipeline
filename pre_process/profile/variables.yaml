#####################################################################
#### File defining user-specific data to be fed to the pipeline #####
#####################################################################
# by Pietro Zafferani

############################################################################
## As a rule of thumb, directories must be set in the form of ABSOLUTE paths
############################################################################


#### Temporary directory for storing the considerable amount of intermediate files. ####
#### Files stored in this directory will NOT be automatically deleted after the pipeline's completion. ####
#### Set to your working directory if not interested in using a temporary directory. ####
tmp: '/scratch/zafferani'


#### List the prefixes of all the plates sequenced for each patient/sample. ####
#### In our case one patient has 4 plates and each plate corresponds to 6 FASTQs. ####

# For instance the FASTQs for the plate labelled as "EMB-JL-v102_NSXA240327" are:
# EMB-JL-v102_NSXA240327_S24_L004_R1_001.fastq.gz
# EMB-JL-v102_NSXA240327_S24_L004_R2_001.fastq.gz 
# EMB-JL-v102_NSXA240327_S24_L005_R1_001.fastq.gz
# EMB-JL-v102_NSXA240327_S24_L005_R2_001.fastq.gz
# EMB-JL-v102_NSXA240327_S24_L008_R1_001.fastq.gz
# EMB-JL-v102_NSXA240327_S24_L008_R2_001.fastq.gz

#### Use semi-columns as separator between plate IDs within the same string. ####
#### White spaces between plates are handled internally. ####
plates: "EMB-JL-v102_NSXA240327; EMB-JL-v101_NSXA240327; EMB-JL-v091_NSXA240327; EMB-JL-v092_NSXA240327"


#### Label of output directory ####
#### Wither patient or sample ID ####
patient: 'P27_github'


#### Paths of the row FASTQs. ####
#### If not all FASTQs are stored in the same directory, you can specify multiple paths using ####
#### a semicolumn as separator within the same string. ####
#### The paths' order is irrelevant. ####
path_to_plates: "/g/korbel/Costea/Computational/VASAseq_data/TAL1_TALL/All_samples/2024-03-29_3rd_batch/2024-2184-emb-jl-v083-v114/raw_fastq/EMB-JL-v102_fastq;
/g/korbel/Costea/Computational/VASAseq_data/TAL1_TALL/All_samples/2024-03-29_3rd_batch/2024-2184-emb-jl-v083-v114/raw_fastq/EMB-JL-v101_fastq;
/g/korbel/Costea/Computational/VASAseq_data/TAL1_TALL/All_samples/2024-03-29_3rd_batch/2024-2184-emb-jl-v083-v114/raw_fastq/EMB-JL-v091_fastq;
/g/korbel/Costea/Computational/VASAseq_data/TAL1_TALL/All_samples/2024-03-29_3rd_batch/2024-2184-emb-jl-v083-v114/raw_fastq/EMB-JL-v092_fastq"


#### Set the path of your working directory. ####
#### Shoulb be the same directory containing the Snakefile. ####
working_dir: "/g/korbel/zafferani/github_try/pre_process"


#### Define the paths to the following softwares. ####
#### type "module avail" in your terminal to check if they are already installed on your system. ####
#### Note that the subfolder "bin" must be appended to the path for some of them. ####
trimal: "/g/easybuild/x86_64/Rocky/8/haswell/software/Trim_Galore/0.6.7-GCCcore-10.3.0/bin"
cutadapt: "/g/easybuild/x86_64/Rocky/8/haswell/software/cutadapt/3.4-GCCcore-10.3.0/bin"
bwa: "/g/easybuild/x86_64/Rocky/8/haswell/software/BWA/0.7.17-GCCcore-11.2.0/bin"
samtools: "/g/easybuild/x86_64/Rocky/8/haswell/software/SAMtools/1.13-GCC-11.2.0/bin"
bbmap: "/g/easybuild/x86_64/Rocky/8/haswell/software/BBMap/38.98-GCC-11.2.0/"


#### Relative path of ribosomal sequences used as target for ribosome depletion step ####
#### No need to change this parameter. ####
hs_mm_ribo: "rRNA_ref/rRNA_human_mouse.fa"


#### Path to the indexed concatenated genome of human and mouse. ####
#### build indexed genome via scripts/build_genome.sh if needed. ####
ref_path: "/g/korbel/zafferani/github_try/pre_process"


#### In case you already clustered the cells with Seurat, it is possible to feed this object ####
#### to the pipeline to generate the tables needed for the next pipeline module. ####
#### The clsuter labels for each cell must be stored in the obj@meta.data$cluster_seurat slot. ####
#### Cells not present in the Seurat object will be discarded. ####

#### set to 'NA' if you want to avoid creating the metatables and/or you lack the Seurat object. ####
seurat_obj: "/g/korbel/zafferani/Vasa_samples/P27_no_integration/P27.object.rds" #"NA"


#### We can modify the original cluster labels from the Seurat object into new ones. ####
#### Use semicolumn as separator in the same string. ####
#### To matain the original labels set the variable to "". ####
cluster_labs: ''
#"0:Cluster_0; 1:Cluster_1; 2:Cluster_2"


#### Options: "numeric" or "barcode" ####
#### Default to "numeric" ####
#### According to the Seurat object, the single-cell ID can be either numerical (e.g. EMB-JL-v102_NSXA240327_001...) ####
#### or can contain the barcode (e.g. EMB-JL-v085_AAACAGGC...) ####
labeling_type: 'numeric'


#### Set the maximum proportion of ambigous reads (mapping cannot be resolved between mouse and human genome) ####
#### to discard low-quality cells. ####
#### If 0 < "thr" < 1: discard cells with propotion of ambigous higher than "thr" ####
#### E.g. if "thr" = 0.2, cells with more than 20% of ambigous reads will be discarded from the next steps. ####
#### Set "thr" > 1 to bypass this fitlering step. ####
Thr: 2


#### Manage the cluster workload by assigning a weight to each rule. ####
#### The total weight of all jobs simoultaneously running on the cluster cannot exceed the cap defined by ####
#### the resources.load parameter in config.yaml . ####
#### No need to change these settings. ####
fast_jobs: 2
slow_jobs: 4


#### INFO SECTION #####

############# how to output the DAG png of the pipeline ############### 
###snakemake --profile profile/ --forceall --rulegraph filtering_cleaned | dot -Tpng > dag.png
